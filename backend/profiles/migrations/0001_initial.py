# Generated by Django 5.1.3 on 2024-11-25 19:29

import django.core.validators
import django.db.models.deletion
import profiles.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("profile_slug", models.SlugField(max_length=255, unique=True)),
                ("title", models.CharField(max_length=512)),
                ("description", models.TextField()),
                ("is_public", models.BooleanField(default=False)),
                (
                    "profile_image_original",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=profiles.models.unique_profile_image_filename,
                        validators=[
                            django.core.validators.validate_image_file_extension
                        ],
                    ),
                ),
                (
                    "banner_image_original",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=profiles.models.unique_banner_image_filename,
                        validators=[
                            django.core.validators.validate_image_file_extension
                        ],
                    ),
                ),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "telegram_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "twitter_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "bluesky_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "eth_address",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Invalid Ethereum address.",
                                regex="^0x[a-fA-F0-9]{40}$",
                            )
                        ],
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        blank=True, related_name="spaces", to="profiles.profile"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProfileCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "public_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=512)),
                ("description", models.TextField()),
                (
                    "image_original",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=profiles.models.unique_profile_card_image_filename,
                        validators=[
                            django.core.validators.validate_image_file_extension
                        ],
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="URL must be a local absolute path.",
                                regex="^\\/[a-zA-Z0-9_\\-\\/]*$",
                            )
                        ],
                    ),
                ),
                ("video_url", models.URLField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cards",
                        to=settings.AUTH_USER_MODEL,
                        validators=[profiles.models.validate_user_profile_public],
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cards",
                        to="profiles.profile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="profile",
            index=models.Index(
                fields=["public_id"], name="profiles_pr_public__48c41d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="profilecard",
            index=models.Index(
                fields=["public_id"], name="profiles_pr_public__aaed27_idx"
            ),
        ),
    ]
